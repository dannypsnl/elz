// Code generated from ./Elz.g4 by ANTLR 4.7.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 60, 353,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3,
	8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3,
	13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3,
	17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20,
	3, 20, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3,
	25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29,
	3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3,
	32, 3, 33, 3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35,
	3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3,
	37, 3, 37, 3, 38, 3, 38, 3, 39, 3, 39, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41,
	3, 42, 3, 42, 3, 43, 3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 46, 3,
	46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 48, 3, 48, 3, 48, 3, 49, 3, 49, 3, 49,
	3, 50, 3, 50, 3, 50, 3, 51, 3, 51, 3, 52, 6, 52, 276, 10, 52, 13, 52, 14,
	52, 277, 3, 52, 3, 52, 3, 53, 3, 53, 3, 53, 3, 53, 7, 53, 286, 10, 53,
	12, 53, 14, 53, 289, 11, 53, 3, 53, 3, 53, 3, 53, 3, 53, 3, 54, 3, 54,
	3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 5, 54, 304, 10, 54, 3,
	55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 56, 3, 56, 7, 56, 314, 10, 56,
	12, 56, 14, 56, 317, 11, 56, 3, 57, 5, 57, 320, 10, 57, 3, 58, 3, 58, 5,
	58, 324, 10, 58, 3, 59, 7, 59, 327, 10, 59, 12, 59, 14, 59, 330, 11, 59,
	3, 59, 3, 59, 6, 59, 334, 10, 59, 13, 59, 14, 59, 335, 3, 60, 6, 60, 339,
	10, 60, 13, 60, 14, 60, 340, 3, 61, 3, 61, 3, 62, 3, 62, 7, 62, 347, 10,
	62, 12, 62, 14, 62, 350, 11, 62, 3, 62, 3, 62, 4, 287, 348, 2, 63, 3, 3,
	5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31,
	61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40,
	79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 48, 95, 49,
	97, 50, 99, 51, 101, 52, 103, 53, 105, 54, 107, 55, 109, 56, 111, 57, 113,
	2, 115, 2, 117, 58, 119, 59, 121, 2, 123, 60, 3, 2, 6, 5, 2, 11, 12, 15,
	15, 34, 34, 16, 2, 67, 92, 97, 97, 99, 124, 194, 216, 218, 248, 250, 769,
	882, 895, 897, 8193, 8206, 8207, 8306, 8593, 11266, 12273, 12291, 55297,
	63746, 64977, 65010, 65535, 6, 2, 50, 59, 185, 185, 770, 881, 8257, 8258,
	3, 2, 50, 59, 2, 358, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2,
	39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2,
	2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2,
	2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2,
	2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3,
	2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77,
	3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2,
	85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2,
	2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2,
	2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107,
	3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2,
	2, 119, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2, 3, 125, 3, 2, 2, 2, 5, 128, 3,
	2, 2, 2, 7, 130, 3, 2, 2, 2, 9, 133, 3, 2, 2, 2, 11, 136, 3, 2, 2, 2, 13,
	139, 3, 2, 2, 2, 15, 142, 3, 2, 2, 2, 17, 144, 3, 2, 2, 2, 19, 146, 3,
	2, 2, 2, 21, 148, 3, 2, 2, 2, 23, 150, 3, 2, 2, 2, 25, 152, 3, 2, 2, 2,
	27, 154, 3, 2, 2, 2, 29, 157, 3, 2, 2, 2, 31, 164, 3, 2, 2, 2, 33, 171,
	3, 2, 2, 2, 35, 176, 3, 2, 2, 2, 37, 178, 3, 2, 2, 2, 39, 180, 3, 2, 2,
	2, 41, 186, 3, 2, 2, 2, 43, 189, 3, 2, 2, 2, 45, 191, 3, 2, 2, 2, 47, 193,
	3, 2, 2, 2, 49, 195, 3, 2, 2, 2, 51, 197, 3, 2, 2, 2, 53, 201, 3, 2, 2,
	2, 55, 203, 3, 2, 2, 2, 57, 205, 3, 2, 2, 2, 59, 208, 3, 2, 2, 2, 61, 213,
	3, 2, 2, 2, 63, 215, 3, 2, 2, 2, 65, 217, 3, 2, 2, 2, 67, 221, 3, 2, 2,
	2, 69, 225, 3, 2, 2, 2, 71, 228, 3, 2, 2, 2, 73, 233, 3, 2, 2, 2, 75, 239,
	3, 2, 2, 2, 77, 241, 3, 2, 2, 2, 79, 243, 3, 2, 2, 2, 81, 245, 3, 2, 2,
	2, 83, 248, 3, 2, 2, 2, 85, 250, 3, 2, 2, 2, 87, 252, 3, 2, 2, 2, 89, 254,
	3, 2, 2, 2, 91, 257, 3, 2, 2, 2, 93, 260, 3, 2, 2, 2, 95, 263, 3, 2, 2,
	2, 97, 266, 3, 2, 2, 2, 99, 269, 3, 2, 2, 2, 101, 272, 3, 2, 2, 2, 103,
	275, 3, 2, 2, 2, 105, 281, 3, 2, 2, 2, 107, 303, 3, 2, 2, 2, 109, 305,
	3, 2, 2, 2, 111, 311, 3, 2, 2, 2, 113, 319, 3, 2, 2, 2, 115, 323, 3, 2,
	2, 2, 117, 328, 3, 2, 2, 2, 119, 338, 3, 2, 2, 2, 121, 342, 3, 2, 2, 2,
	123, 344, 3, 2, 2, 2, 125, 126, 7, 41, 2, 2, 126, 127, 7, 107, 2, 2, 127,
	4, 3, 2, 2, 2, 128, 129, 7, 58, 2, 2, 129, 6, 3, 2, 2, 2, 130, 131, 7,
	51, 2, 2, 131, 132, 7, 56, 2, 2, 132, 8, 3, 2, 2, 2, 133, 134, 7, 53, 2,
	2, 134, 135, 7, 52, 2, 2, 135, 10, 3, 2, 2, 2, 136, 137, 7, 56, 2, 2, 137,
	138, 7, 54, 2, 2, 138, 12, 3, 2, 2, 2, 139, 140, 7, 41, 2, 2, 140, 141,
	7, 104, 2, 2, 141, 14, 3, 2, 2, 2, 142, 143, 7, 37, 2, 2, 143, 16, 3, 2,
	2, 2, 144, 145, 7, 93, 2, 2, 145, 18, 3, 2, 2, 2, 146, 147, 7, 95, 2, 2,
	147, 20, 3, 2, 2, 2, 148, 149, 7, 42, 2, 2, 149, 22, 3, 2, 2, 2, 150, 151,
	7, 46, 2, 2, 151, 24, 3, 2, 2, 2, 152, 153, 7, 43, 2, 2, 153, 26, 3, 2,
	2, 2, 154, 155, 7, 60, 2, 2, 155, 156, 7, 60, 2, 2, 156, 28, 3, 2, 2, 2,
	157, 158, 7, 107, 2, 2, 158, 159, 7, 111, 2, 2, 159, 160, 7, 114, 2, 2,
	160, 161, 7, 113, 2, 2, 161, 162, 7, 116, 2, 2, 162, 163, 7, 118, 2, 2,
	163, 30, 3, 2, 2, 2, 164, 165, 7, 116, 2, 2, 165, 166, 7, 103, 2, 2, 166,
	167, 7, 118, 2, 2, 167, 168, 7, 119, 2, 2, 168, 169, 7, 116, 2, 2, 169,
	170, 7, 112, 2, 2, 170, 32, 3, 2, 2, 2, 171, 172, 7, 110, 2, 2, 172, 173,
	7, 113, 2, 2, 173, 174, 7, 113, 2, 2, 174, 175, 7, 114, 2, 2, 175, 34,
	3, 2, 2, 2, 176, 177, 7, 125, 2, 2, 177, 36, 3, 2, 2, 2, 178, 179, 7, 127,
	2, 2, 179, 38, 3, 2, 2, 2, 180, 181, 7, 111, 2, 2, 181, 182, 7, 99, 2,
	2, 182, 183, 7, 118, 2, 2, 183, 184, 7, 101, 2, 2, 184, 185, 7, 106, 2,
	2, 185, 40, 3, 2, 2, 2, 186, 187, 7, 63, 2, 2, 187, 188, 7, 64, 2, 2, 188,
	42, 3, 2, 2, 2, 189, 190, 7, 97, 2, 2, 190, 44, 3, 2, 2, 2, 191, 192, 7,
	63, 2, 2, 192, 46, 3, 2, 2, 2, 193, 194, 7, 62, 2, 2, 194, 48, 3, 2, 2,
	2, 195, 196, 7, 64, 2, 2, 196, 50, 3, 2, 2, 2, 197, 198, 7, 48, 2, 2, 198,
	199, 7, 48, 2, 2, 199, 200, 7, 48, 2, 2, 200, 52, 3, 2, 2, 2, 201, 202,
	7, 61, 2, 2, 202, 54, 3, 2, 2, 2, 203, 204, 7, 66, 2, 2, 204, 56, 3, 2,
	2, 2, 205, 206, 7, 47, 2, 2, 206, 207, 7, 64, 2, 2, 207, 58, 3, 2, 2, 2,
	208, 209, 7, 107, 2, 2, 209, 210, 7, 111, 2, 2, 210, 211, 7, 114, 2, 2,
	211, 212, 7, 110, 2, 2, 212, 60, 3, 2, 2, 2, 213, 214, 7, 60, 2, 2, 214,
	62, 3, 2, 2, 2, 215, 216, 7, 45, 2, 2, 216, 64, 3, 2, 2, 2, 217, 218, 7,
	110, 2, 2, 218, 219, 7, 103, 2, 2, 219, 220, 7, 118, 2, 2, 220, 66, 3,
	2, 2, 2, 221, 222, 7, 111, 2, 2, 222, 223, 7, 119, 2, 2, 223, 224, 7, 118,
	2, 2, 224, 68, 3, 2, 2, 2, 225, 226, 7, 104, 2, 2, 226, 227, 7, 112, 2,
	2, 227, 70, 3, 2, 2, 2, 228, 229, 7, 118, 2, 2, 229, 230, 7, 123, 2, 2,
	230, 231, 7, 114, 2, 2, 231, 232, 7, 103, 2, 2, 232, 72, 3, 2, 2, 2, 233,
	234, 7, 118, 2, 2, 234, 235, 7, 116, 2, 2, 235, 236, 7, 99, 2, 2, 236,
	237, 7, 107, 2, 2, 237, 238, 7, 118, 2, 2, 238, 74, 3, 2, 2, 2, 239, 240,
	7, 48, 2, 2, 240, 76, 3, 2, 2, 2, 241, 242, 7, 40, 2, 2, 242, 78, 3, 2,
	2, 2, 243, 244, 7, 44, 2, 2, 244, 80, 3, 2, 2, 2, 245, 246, 7, 99, 2, 2,
	246, 247, 7, 117, 2, 2, 247, 82, 3, 2, 2, 2, 248, 249, 7, 96, 2, 2, 249,
	84, 3, 2, 2, 2, 250, 251, 7, 49, 2, 2, 251, 86, 3, 2, 2, 2, 252, 253, 7,
	47, 2, 2, 253, 88, 3, 2, 2, 2, 254, 255, 7, 62, 2, 2, 255, 256, 7, 63,
	2, 2, 256, 90, 3, 2, 2, 2, 257, 258, 7, 64, 2, 2, 258, 259, 7, 63, 2, 2,
	259, 92, 3, 2, 2, 2, 260, 261, 7, 35, 2, 2, 261, 262, 7, 63, 2, 2, 262,
	94, 3, 2, 2, 2, 263, 264, 7, 63, 2, 2, 264, 265, 7, 63, 2, 2, 265, 96,
	3, 2, 2, 2, 266, 267, 7, 40, 2, 2, 267, 268, 7, 40, 2, 2, 268, 98, 3, 2,
	2, 2, 269, 270, 7, 126, 2, 2, 270, 271, 7, 126, 2, 2, 271, 100, 3, 2, 2,
	2, 272, 273, 7, 65, 2, 2, 273, 102, 3, 2, 2, 2, 274, 276, 9, 2, 2, 2, 275,
	274, 3, 2, 2, 2, 276, 277, 3, 2, 2, 2, 277, 275, 3, 2, 2, 2, 277, 278,
	3, 2, 2, 2, 278, 279, 3, 2, 2, 2, 279, 280, 8, 52, 2, 2, 280, 104, 3, 2,
	2, 2, 281, 282, 7, 49, 2, 2, 282, 283, 7, 49, 2, 2, 283, 287, 3, 2, 2,
	2, 284, 286, 11, 2, 2, 2, 285, 284, 3, 2, 2, 2, 286, 289, 3, 2, 2, 2, 287,
	288, 3, 2, 2, 2, 287, 285, 3, 2, 2, 2, 288, 290, 3, 2, 2, 2, 289, 287,
	3, 2, 2, 2, 290, 291, 7, 12, 2, 2, 291, 292, 3, 2, 2, 2, 292, 293, 8, 53,
	2, 2, 293, 106, 3, 2, 2, 2, 294, 295, 7, 118, 2, 2, 295, 296, 7, 116, 2,
	2, 296, 297, 7, 119, 2, 2, 297, 304, 7, 103, 2, 2, 298, 299, 7, 104, 2,
	2, 299, 300, 7, 99, 2, 2, 300, 301, 7, 110, 2, 2, 301, 302, 7, 117, 2,
	2, 302, 304, 7, 103, 2, 2, 303, 294, 3, 2, 2, 2, 303, 298, 3, 2, 2, 2,
	304, 108, 3, 2, 2, 2, 305, 306, 7, 100, 2, 2, 306, 307, 7, 116, 2, 2, 307,
	308, 7, 103, 2, 2, 308, 309, 7, 99, 2, 2, 309, 310, 7, 109, 2, 2, 310,
	110, 3, 2, 2, 2, 311, 315, 5, 113, 57, 2, 312, 314, 5, 115, 58, 2, 313,
	312, 3, 2, 2, 2, 314, 317, 3, 2, 2, 2, 315, 313, 3, 2, 2, 2, 315, 316,
	3, 2, 2, 2, 316, 112, 3, 2, 2, 2, 317, 315, 3, 2, 2, 2, 318, 320, 9, 3,
	2, 2, 319, 318, 3, 2, 2, 2, 320, 114, 3, 2, 2, 2, 321, 324, 5, 113, 57,
	2, 322, 324, 9, 4, 2, 2, 323, 321, 3, 2, 2, 2, 323, 322, 3, 2, 2, 2, 324,
	116, 3, 2, 2, 2, 325, 327, 5, 121, 61, 2, 326, 325, 3, 2, 2, 2, 327, 330,
	3, 2, 2, 2, 328, 326, 3, 2, 2, 2, 328, 329, 3, 2, 2, 2, 329, 331, 3, 2,
	2, 2, 330, 328, 3, 2, 2, 2, 331, 333, 7, 48, 2, 2, 332, 334, 5, 121, 61,
	2, 333, 332, 3, 2, 2, 2, 334, 335, 3, 2, 2, 2, 335, 333, 3, 2, 2, 2, 335,
	336, 3, 2, 2, 2, 336, 118, 3, 2, 2, 2, 337, 339, 5, 121, 61, 2, 338, 337,
	3, 2, 2, 2, 339, 340, 3, 2, 2, 2, 340, 338, 3, 2, 2, 2, 340, 341, 3, 2,
	2, 2, 341, 120, 3, 2, 2, 2, 342, 343, 9, 5, 2, 2, 343, 122, 3, 2, 2, 2,
	344, 348, 7, 36, 2, 2, 345, 347, 11, 2, 2, 2, 346, 345, 3, 2, 2, 2, 347,
	350, 3, 2, 2, 2, 348, 349, 3, 2, 2, 2, 348, 346, 3, 2, 2, 2, 349, 351,
	3, 2, 2, 2, 350, 348, 3, 2, 2, 2, 351, 352, 7, 36, 2, 2, 352, 124, 3, 2,
	2, 2, 13, 2, 277, 287, 303, 315, 319, 323, 328, 335, 340, 348, 3, 2, 3,
	2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "''i'", "'8'", "'16'", "'32'", "'64'", "''f'", "'#'", "'['", "']'",
	"'('", "','", "')'", "'::'", "'import'", "'return'", "'loop'", "'{'", "'}'",
	"'match'", "'=>'", "'_'", "'='", "'<'", "'>'", "'...'", "';'", "'@'", "'->'",
	"'impl'", "':'", "'+'", "'let'", "'mut'", "'fn'", "'type'", "'trait'",
	"'.'", "'&'", "'*'", "'as'", "'^'", "'/'", "'-'", "'<='", "'>='", "'!='",
	"'=='", "'&&'", "'||'", "'?'", "", "", "", "'break'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "WS", "COMMENT",
	"BOOLEAN", "BREAK", "ID", "FLOAT", "INT", "STRING",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
	"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
	"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
	"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48",
	"T__49", "WS", "COMMENT", "BOOLEAN", "BREAK", "ID", "StartLetter", "Letter",
	"FLOAT", "INT", "Digit", "STRING",
}

type ElzLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewElzLexer(input antlr.CharStream) *ElzLexer {

	l := new(ElzLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Elz.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ElzLexer tokens.
const (
	ElzLexerT__0    = 1
	ElzLexerT__1    = 2
	ElzLexerT__2    = 3
	ElzLexerT__3    = 4
	ElzLexerT__4    = 5
	ElzLexerT__5    = 6
	ElzLexerT__6    = 7
	ElzLexerT__7    = 8
	ElzLexerT__8    = 9
	ElzLexerT__9    = 10
	ElzLexerT__10   = 11
	ElzLexerT__11   = 12
	ElzLexerT__12   = 13
	ElzLexerT__13   = 14
	ElzLexerT__14   = 15
	ElzLexerT__15   = 16
	ElzLexerT__16   = 17
	ElzLexerT__17   = 18
	ElzLexerT__18   = 19
	ElzLexerT__19   = 20
	ElzLexerT__20   = 21
	ElzLexerT__21   = 22
	ElzLexerT__22   = 23
	ElzLexerT__23   = 24
	ElzLexerT__24   = 25
	ElzLexerT__25   = 26
	ElzLexerT__26   = 27
	ElzLexerT__27   = 28
	ElzLexerT__28   = 29
	ElzLexerT__29   = 30
	ElzLexerT__30   = 31
	ElzLexerT__31   = 32
	ElzLexerT__32   = 33
	ElzLexerT__33   = 34
	ElzLexerT__34   = 35
	ElzLexerT__35   = 36
	ElzLexerT__36   = 37
	ElzLexerT__37   = 38
	ElzLexerT__38   = 39
	ElzLexerT__39   = 40
	ElzLexerT__40   = 41
	ElzLexerT__41   = 42
	ElzLexerT__42   = 43
	ElzLexerT__43   = 44
	ElzLexerT__44   = 45
	ElzLexerT__45   = 46
	ElzLexerT__46   = 47
	ElzLexerT__47   = 48
	ElzLexerT__48   = 49
	ElzLexerT__49   = 50
	ElzLexerWS      = 51
	ElzLexerCOMMENT = 52
	ElzLexerBOOLEAN = 53
	ElzLexerBREAK   = 54
	ElzLexerID      = 55
	ElzLexerFLOAT   = 56
	ElzLexerINT     = 57
	ElzLexerSTRING  = 58
)
