language: go, cpp

go_import_path: github.com/elz-lang/elz

# Only the last two Go releases are supported by the Go team with security
# updates. Any versions older than that should be considered deprecated.
# Don't bother testing with them. tip builds your code with the latest
# development version of Go. This can warn you that your code will break
# in the next version of Go. Don't worry! Later we declare that test runs
# are allowed to fail on Go tip.
go:
  - 1.9
  - tip

compiler:
  - gcc
addons:
  apt:
    sources:
      - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
    packages:
      - cmake
      - cmake-data
# Skip the install step. Don't `go get` dependencies. Only build with the
# code in vendor/
install:
  - cd $GOPATH/llvm.org/llvm/bindings/go/llvm/
  - mkdir workdir && cd workdir
  - mkdir llvm_build && cd llvm_build
  - cmake -DCMAKE_BUILD_TYPE=Debug $GOPATH/llvm.org/llvm
  - cd $GOPATH/llvm.org/llvm/bindings/go/
  - ./build.sh

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
    - go: tip
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  - go get github.com/antlr/antlr4/runtime/Go/antlr
  - go get -d llvm.org/llvm/bindings/go/llvm

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - go test -v -race ./...                   # Run all the tests with the race detector enabled
  #- gocyclo -over 19 $GO_FILES               # forbid code with huge functions
