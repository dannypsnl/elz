sudo: true

language: go

go:
  - 1.10.x
  - 1.11.x
  - master

dist: trusty
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty
    packages:
      - g++-4.9
      - clang-8
      - clang-tools-8
      - clang-8-doc
      - libclang-common-8-dev
      - libclang-8-dev
      - libclang1-8
      - libllvm8
      - llvm-8
      - llvm-8-dev
      - llvm-8-runtime
      - libfuzzer-8-dev
      - lldb-8
      - lld-8
env:
  - CC=clang-8 CGO_CXXFLAGS=-std=c++11 CGO_LDFLAGS_ALLOW='Wl,(search_paths_first|headerpad_max_install_names)' CGO_CPPFLAGS="`llvm-config-8 --cppflags`" CGO_LDFLAGS="`llvm-config-8 --ldflags --libs --system-libs all`"

# Skip install step. Control by ourself
install: true

matrix:
  allow_failures:
    - go: master
  fast_finish: true
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-4.9
            - clang-6.0
            - clang-tools-6.0
            - clang-6.0-doc
            - libclang-common-6.0-dev
            - libclang-6.0-dev
            - libclang1-6.0
            - libllvm6.0
            - llvm-6.0
            - llvm-6.0-dev
            - llvm-6.0-runtime
            - libfuzzer-6.0-dev
            - lldb-6.0
            - lld-6.0
      env:
        - CC=clang-6.0
        - CGO_CXXFLAGS=-std=c++11
        - CGO_LDFLAGS_ALLOW='Wl,(search_paths_first|headerpad_max_install_names)'
        - CGO_CPPFLAGS="`llvm-config-6.0 --cppflags`"
        - CGO_LDFLAGS="`llvm-config-6.0 --ldflags --libs --system-libs all`"
        - LLVM_VER=60

before_script:
  - ./get-llvm-source.sh
script:
  - go test -coverprofile=coverage.txt -v ./...
after_success:
  - bash <(curl -s https://codecov.io/bash)

